name: Frontend

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    # paths-ignore:
    paths:
      - 'frontend/**'
      - '.github/workflows/*'
      - '!docs/**'
      - '!**.md'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow cont
  build:
    # needs: start
    runs-on: ubuntu-latest
    name: Build and Deploy

    steps:
    - uses: actions/checkout@v3
    - name: Install sshpass
      run: |
          sudo apt-get update
          sudo apt-get install sshpass -y
          ls -la
          echo "This is PWD"
          pwd
          ip a
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Compile Frontend
      run: |
            node -v
            npm -v
            cd frontend
            npm install
            npm run build
            echo "chmod for js"
            chmod -R 755 ./build/static/js
    - name: Prepare Backend
      run: |
            sshpass -p "${{ secrets.SSH_PAS }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{secrets.SSH_HOST}} << EOF
            cd ${{ secrets.SSH_DIR }} && \
            mkdir -p swd
            EOF
    - name: Deploy Frontend
      run: |
            sshpass -p "${{ secrets.SSH_PAS }}" scp -r -o StrictHostKeyChecking=no ./frontend/build/* ${{ secrets.SSH_USER }}@${{secrets.SSH_HOST}}:${{ secrets.SSH_DIR }}swd/
    - name: Release Frontend
      run: |
            sshpass -p "${{ secrets.SSH_PAS }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{secrets.SSH_HOST}} << EOF
            cd ${{ secrets.SSH_DIR }} && \
            rm -rf bak || echo "bak not found" && \
            mv prd bak || echo "prd not found" && \
            mv swd prd || echo "swd not found"
            EOF
    # - usesMMAND: "chown -R ${{secrets.SSH_USER}}:install ${{ secrets.SSH_DIR }}* \
    #     && chmod 755 $(find ${{ secrets.SSH_DIR }} -type d) \
    #     && chmod 644 $(find ${{ secrets.SSH_DIR }} -type f) \
    #     && chmod -R 755 ${{ secrets.SSH_DIR }}static/js"