name: Build Image

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:

  consecutiveness:
    name: Check running Jobs
    runs-on: ubuntu-latest
    steps:
    - uses: mktcode/consecutive-workflow-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
  
  version:
    name: Get Version
    runs-on: ubuntu-latest
    needs:
    - consecutiveness

    outputs:
      vID: ${{ steps.cutSHA.outputs.test }}

    steps:
    - name: Get short SHA
      id: cutSHA
      run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

  backend:
    runs-on: ubuntu-latest
    name: Build Backend
    needs:
    - version

    steps:
    
    - uses: actions/checkout@v3

    - name: List all FIles
      run: find . | sort -V | grep migrations

  #   # - uses: VaultVulp/gp-docker-action@1.2.0
  #   #   with:
  #   #     github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
  #   #     image-name: bmo-test #:${{ steps.cutSHA.outputs.sha7 }} # Provide Docker image name
  #   #     image-tag: head
  #       # extract-git-tag: true # Provide flag to extract Docker image tag from git reference
  #       # build-context: ./deploy # Provide path to the folder with the Dockerfile
    
    - uses: pmorelli92/github-container-registry-build-push@2.0.0
      # name: Build and Publish latest service image
      with:
        github-push-secret: ${{secrets.GITHUB_TOKEN}}
        docker-image-name: bmo-test-back
        docker-image-tag: ${{ needs.version.outputs.vID }} # optional
        dockerfile-path: ./DockerfileBackend # optional
        # build-context: ./backend/ # optional
  
  # frontend:
  #   runs-on: ubuntu-latest
  #   name: Build Frontend
  #   needs:
  #   - version

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Check / set env Dev
  #     run: |
  #           echo "DIR=DEV" >> $GITHUB_ENV
  #           echo "REACT_APP_DJANGO_HOST=${{ secrets.DOMAIN_DEV }}" >> $GITHUB_ENV
  #           echo "CI=false" >> $GITHUB_ENV

  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: '16'
  #   - name: Compile Frontend
  #     run: |
  #           cd frontend
  #           npm ci --legacy-peer-deps
  #           npm run build

  #   - uses: pmorelli92/github-container-registry-build-push@2.0.0
  #     name: Build and Publish latest service image
  #     with:
  #       github-push-secret: ${{secrets.GITHUB_TOKEN}}
  #       docker-image-name: bmo-test-back
  #       docker-image-tag: ${{ steps.cutSHA.outputs.sha7 }} # optional
  #       dockerfile-path: ./DockerfileFrontend # optional
  # #       # build-context: ./backend/ # optional
  
  # deployPreProd:
  #   runs-on: ubuntu-latest
  #   name: Deploy PreProd
  #   needs:
  #   - backend
  #   - frontend

  #   steps:
  #   - name: Make THINGS
  #     run: echo "Hello World"
  
  # tests:
  #   runs-on: ubuntu-latest
  #   name: Build Frontend
  #   needs:
  #   - deployPreProd
  #   steps:
  #   - name: Make THINGS
  #     run: echo "Hello World"
  
  # deployProd:
  #   runs-on: ubuntu-latest
  #   name: Deploy Production
  #   needs:
  #   - tests

  #   steps:
  #   - name: Make THINGS
  #     run: echo "Hello World"